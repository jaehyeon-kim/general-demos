version: "3.5"

services:
  checkout:
    build: ./checkout
    container_name: checkout
    expose:
      - 50001 # Dapr instances communicate over gRPC so we need to expose the gRPC port
    networks:
      - appnet
    depends_on:
      - redis
      - placement
      - zookeeper
      - kafka-0
  checkout-sidecar:
    image: daprio/dapr:1.11.0
    command: [
        "./daprd",
        "--app-id",
        "checkout",
        "--app-port",
        "3000",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--resources-path",
        "./components",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - nodeapp
    network_mode: "service:nodeapp" # Attach the nodeapp-dapr service to the nodeapp network namespace
  order-porcessor:
    build: ./order-porcessor
    container_name: order-porcessor
    expose:
      - 50001
    networks:
      - appnet
    depends_on:
      - redis
      - placement
      - zookeeper
      - kafka-0
  placement:
    image: daprio/dapr:1.11.0
    container_name: dapr_placement
    command: ["./placement", "--port", "50006"]
    expose:
      - 50006
    networks:
      - appnet
  zipkin:
    image: openzipkin/zipkin
    container_name: dapr_zipkin
    ports:
      - "9411:9411"
    networks:
      - appnet
  redis:
    image: redis:6
    container_name: dapr_redis
    ports:
      - "6379:6379"
    networks:
      - appnet
  zookeeper:
    image: bitnami/zookeeper:3.5
    container_name: zookeeper
    ports:
      - "2181"
    networks:
      - appnet
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper
  kafka-0:
    image: bitnami/kafka:2.8.1
    container_name: kafka-0
    expose:
      - 9092
    ports:
      - "29092:29092"
    networks:
      - appnet
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=0
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-0:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
    volumes:
      - kafka_0_data:/bitnami/kafka
    depends_on:
      - zookeeper
  kafka-ui:
    image: provectuslabs/kafka-ui:master
    container_name: kafka-ui
    ports:
      - "8080:8080"
    networks:
      - appnet
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-0:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - zookeeper
      - kafka-0

networks:
  appnet:
    name: app-network

volumes:
  zookeeper_data:
    driver: local
    name: zookeeper_data
  kafka_0_data:
    driver: local
    name: kafka_0_data
