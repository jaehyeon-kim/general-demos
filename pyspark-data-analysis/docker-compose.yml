version: "3.5"

services:
  spark:
    image: public.ecr.aws/emr-on-eks/spark/emr-6.15.0:latest
    container_name: spark
    command: /usr/lib/spark/sbin/start-history-server.sh
    ports:
      - "18080:18080"
    networks:
      - appnet
    environment:
      - BOOTSTRAP_SERVERS=kafka-0:9092
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-not_set}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-not_set}
      - AWS_REGION=${AWS_REGION:-not_set}
      - SPARK_NO_DAEMONIZE=true
    volumes:
      - ./:/home/hadoop/project
      - ./dockers/spark/spark-defaults.conf:/usr/lib/spark/conf/spark-defaults.conf
      - ./dockers/spark/log4j2.properties:/usr/lib/spark/conf/log4j2.properties
  # jobmanager:
  #   image: emr-6.15.0-flink:local
  #   container_name: jobmanager
  #   command: jobmanager
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     - appnet
  #   volumes:
  #     - ./:/home/flink/project
  #   environment:
  #     - RUNTIME_ENV=DOCKER
  #     - BOOTSTRAP_SERVERS=kafka-0:9092
  #     - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-not_set}
  #     - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-not_set}
  #     - AWS_REGION=${AWS_REGION:-not_set}
  #     - K8S_FLINK_GLUE_ENABLED=true
  #     - K8S_FLINK_LOG_URL_STDERR=/tmp/stderr
  #     - K8S_FLINK_LOG_URL_STDOUT=/tmp/stdout
  #     - HADOOP_CONF_DIR=/glue/confs/hadoop/conf
  #     - |
  #       FLINK_PROPERTIES=
  #       jobmanager.rpc.address: jobmanager
  #       state.backend: filesystem
  #       state.checkpoints.dir: file:///tmp/flink-checkpoints
  #       heartbeat.interval: 1000
  #       heartbeat.timeout: 5000
  #       rest.flamegraph.enabled: true
  #       web.backpressure.refresh-interval: 10000
  #       jobmanager.memory.process.size: 1600m
  #       taskmanager.memory.process.size: 1728m
  # taskmanager:
  #   image: emr-6.15.0-flink:local
  #   container_name: taskmanager
  #   command: taskmanager
  #   networks:
  #     - appnet
  #   volumes:
  #     - ./:/home/flink/project
  #     - flink_data:/tmp/
  #   environment:
  #     - RUNTIME_ENV=DOCKER
  #     - BOOTSTRAP_SERVERS=kafka-0:9092
  #     - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-not_set}
  #     - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-not_set}
  #     - AWS_REGION=${AWS_REGION:-not_set}
  #     - K8S_FLINK_GLUE_ENABLED=true
  #     - K8S_FLINK_LOG_URL_STDERR=/tmp/stderr
  #     - K8S_FLINK_LOG_URL_STDOUT=/tmp/stdout
  #     - HADOOP_CONF_DIR=/glue/confs/hadoop/conf
  #     - |
  #       FLINK_PROPERTIES=
  #       jobmanager.rpc.address: jobmanager
  #       taskmanager.numberOfTaskSlots: 5
  #       state.backend: filesystem
  #       state.checkpoints.dir: file:///tmp/flink-checkpoints
  #       heartbeat.interval: 1000
  #       heartbeat.timeout: 5000
  #       jobmanager.memory.process.size: 1600m
  #       taskmanager.memory.process.size: 1728m
  #   depends_on:
  #     - jobmanager
  # zookeeper:
  #   image: bitnami/zookeeper:3.5
  #   container_name: zookeeper
  #   ports:
  #     - "2181"
  #   networks:
  #     - appnet
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  #   volumes:
  #     - zookeeper_data:/bitnami/zookeeper
  # kafka-0:
  #   image: bitnami/kafka:2.8.1
  #   container_name: kafka-0
  #   expose:
  #     - 9092
  #   ports:
  #     - "29092:29092"
  #   networks:
  #     - appnet
  #   environment:
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_CFG_BROKER_ID=0
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:29092
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-0:9092,EXTERNAL://localhost:29092
  #     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
  #     - KAFKA_CFG_NUM_PARTITIONS=3
  #     - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
  #   volumes:
  #     - kafka_0_data:/bitnami/kafka
  #   depends_on:
  #     - zookeeper
  # kafka-ui:
  #   image: provectuslabs/kafka-ui:v0.7.1
  #   container_name: kafka-ui
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - appnet
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-0:9092
  #     KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  #   depends_on:
  #     - zookeeper
  #     - kafka-0

networks:
  appnet:
    name: app-network
# volumes:
#   flink_data:
#     driver: local
#     name: flink_data
#   zookeeper_data:
#     driver: local
#     name: zookeeper_data
#   kafka_0_data:
#     driver: local
#     name: kafka_0_data
